{"version":3,"sources":["components/Chart.js","components/App.js","index.js"],"names":["Chart","req","XMLHttpRequest","open","send","onload","json","JSON","parse","responseText","rawData","data","source","source_name","map","elt","quarter","slice","tooltipYear","tooltipDollars","toFixed","replace","barwidth","length","years","Date","xScale","d3","domain","range","width","yScale","d","height","xAxis","yAxis","svg","append","attr","tooltip","style","padding","text","selectAll","enter","i","on","transition","duration","html","call","react_default","a","createElement","id","React","Component","App","className","src_components_Chart","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1ed0bee5.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nimport './Chart.css';\r\n\r\n\r\n\r\nclass Chart extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let req = new XMLHttpRequest();\r\n        let dataURL = \"https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json\";\r\n        req.open(\"GET\", dataURL, true);\r\n        req.send();\r\n        req.onload = () => {\r\n            let json = JSON.parse(req.responseText);\r\n            let rawData = json.data;\r\n            let source = json.source_name;\r\n            \r\n            const data = rawData.map( (elt) => {\r\n                let quarter;\r\n                let quarterNumeral = elt[0].slice(5,7)\r\n                switch (quarterNumeral) {\r\n                    case '01':\r\n                        quarter = 'Q1';\r\n                        break;\r\n                    case '04':\r\n                        quarter = 'Q2';\r\n                        break;\r\n                    case '07':\r\n                        quarter = 'Q3';\r\n                        break;\r\n                    case '10':\r\n                        quarter = 'Q4';\r\n                        break;\r\n                    default:\r\n                        quarter = \"null\";\r\n                        break;\r\n                }\r\n                let year = elt[0].slice(0, 4);\r\n                let tooltipYear = quarter + \" \" + year;\r\n\r\n                let tooltipDollars = '$' + elt[1].toFixed(1).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,') + ' Billion';\r\n                return [elt[0], elt[1], tooltipYear, tooltipDollars];\r\n            })\r\n    \r\n            // set size & padding of graphing area\r\n            const height = 500;\r\n            const width = 900;\r\n            const padding = 40;\r\n            const barwidth = (width - (2 * padding)) / data.length;\r\n\r\n\r\n            // set scale of graph based on data\r\n            let years = rawData.map( (elt) => new Date(elt[0]) );\r\n            const xScale = d3.scaleTime()\r\n                             .domain([d3.min(years), d3.max(years)])\r\n                             .range([padding, width - padding]);\r\n            const yScale = d3.scaleLinear()\r\n                             .domain([0, d3.max(data, (d) => d[1])])\r\n                             .range([height - padding, padding]);\r\n\r\n            const xAxis = d3.axisBottom(xScale);\r\n            const yAxis = d3.axisLeft(yScale);\r\n\r\n            const svg = d3.select(\"#chart\")\r\n                          .append(\"svg\")\r\n                          .attr(\"width\", width)\r\n                          .attr(\"height\", height);\r\n\r\n            const tooltip = d3.select(\"#chart\")\r\n                              .append(\"div\")\r\n                              .attr(\"class\", \"tooltip\")\r\n                              .attr(\"id\",\"tooltip\")\r\n                              .style(\"opacity\",0);\r\n            \r\n            svg.append(\"text\")\r\n               .attr(\"class\", \"legend\")\r\n               .attr('x', padding + 20)\r\n               .attr('y', padding + 20)\r\n               .text(\"U.S. Annual Gross Domest Product (in billions)\")\r\n            \r\n            svg.append(\"text\")\r\n               .attr(\"class\",\"footnote\")\r\n               .attr('x', width - padding - 190)\r\n               .attr('y', height)\r\n               .text(\"Source: \" + source)\r\n            \r\n            svg.selectAll(\"rect\")\r\n               .data(data)\r\n               .enter()\r\n               .append(\"rect\")\r\n               .attr(\"class\", \"bar\")\r\n               .attr(\"data-date\", (d) => d[0])\r\n               .attr(\"data-gdp\", (d) => d[1])\r\n               .attr(\"x\", (d,i) => { return padding + (i * (barwidth)); })\r\n               .attr(\"y\", (d) => yScale(d[1]) )\r\n               .attr(\"width\", barwidth)\r\n               .attr(\"height\", (d) => height - padding - yScale(d[1]))\r\n               .on(\"mouseover\", (d,i) => {\r\n                   tooltip.transition()\r\n                          .duration(200)\r\n                          .style('opacity',.9);\r\n                    tooltip.html(d[2] + \":<br>\" + d[3])\r\n                           .attr('data-date', d[0])\r\n                           .style('left', padding + (i * barwidth) + \"px\")\r\n                           .style('top', yScale(d[1]) + 30 + \"px\");\r\n               })\r\n               .on('mouseout', (d) => {\r\n                   tooltip.transition()\r\n                          .duration(200)\r\n                          .style('opacity',0);\r\n               })\r\n            \r\n            svg.append(\"g\")\r\n               .attr(\"transform\", \"translate(0, \" + (height - padding) + \")\")\r\n               .attr(\"id\",\"x-axis\")\r\n               .call(xAxis);\r\n            \r\n            svg.append(\"g\")\r\n               .attr(\"transform\", \"translate(\" + padding + \", 0)\")\r\n               .attr(\"id\",\"y-axis\")\r\n               .call(yAxis);\r\n\r\n        }    \r\n    }\r\n\r\n    render() {\r\n        return <div id=\"chart\"></div>;\r\n    }\r\n\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from './Chart.js';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <div className=\"ui segment\">\r\n                <h1 id=\"title\">United States GDP</h1>\r\n                <div className=\"ui segment\">\r\n                    <Chart />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}